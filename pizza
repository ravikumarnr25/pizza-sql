-- Retrieve the total number of orders placed.
select count(order_id)  as total_orders  from orders1;

-- Calculate the total revenue generated from pizza sales.
select round(sum(orders_details.quantity * pizzas.price),2) as total_sales
from orders_details join pizzas
on orders_details.pizza_id = pizzas.pizza_id;

-- Identify the highest-priced pizza
select pizzas.price,pizza_types.name
 from pizzas join pizza_types 
 ON pizzas.pizza_type_id = pizza_types.pizza_type_id
 order by pizzas.price desc
 limit 1 ;
 
 -- Identify the most common pizza size ordered.
select pizzas.size,count(orders_details.order_details_id) as order_count
from pizzas join orders_details
on pizzas.pizza_id = orders_details.pizza_id
group by pizzas.size order by order_count desc;

-- List the top 5 most ordered pizza types along with their quantities.
select pizza_types.name,sum(orders_details.quantity) as quantity
from pizza_types JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
join orders_details 
ON orders_details.pizza_id =pizzas.pizza_id
group by pizza_types.name 
order by quantity desc
limit 5;

-- Join the necessary tables to find the total quantity of each pizza category ordered.
select pizza_types.category,SUM(orders_details.quantity) as quantity
from pizzas JOIN pizza_types
ON pizzas.pizza_type_id = pizza_types.pizza_type_id
join orders_details
on pizzas.pizza_id= orders_details.pizza_id
group by pizza_types.category
order by quantity desc;

-- Determine the distribution of orders by hour of the day.
select hour(order_time)as hour,count(order_id) as order_count
from orders1 
group by hour(order_time);

--  find the category-wise distribution of pizzas.
select category,count(name) from pizza_types
group by category;

-- Group the orders by date and calculate the average number of pizzas ordered per day.
select round(avg(quantity),0) as avg_pizzas from
(select orders1.order_date , sum(orders_details.quantity) AS quantity
from orders1 join orders_details
on orders1.order_id= orders_details.order_id
group by orders1.order_date ) as order_quantity;

-- Determine the top 3 most ordered pizza types based on revenue.-- 
 select pizza_types.name,SUM(orders_details.quantity*pizzas.price) AS revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join orders_details
on orders_details.pizza_id=pizzas.pizza_id
group by pizza_types.name
order by revenue desc
limit 3;

-- Calculate the percentage contribution of each pizza type to total revenue.
select pizza_types.category,
round(sum(orders_details.quantity*pizzas.price)/ (select 
     round(sum(orders_details.quantity * pizzas.price),2) as total_sales
from orders_details
 join pizzas on orders_details.pizza_id = pizzas.pizza_id)*100,2) as revenue
from pizza_types join pizzas 
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join orders_details
on orders_details.pizza_id=pizzas.pizza_id
group by pizza_types.category
order by revenue desc;


-- Analyze the cumulative revenue generated over time.
select order_date,
sum(revenue) over( order by order_date) as cummulatative_revenue
from
(select orders1.order_date,
sum(pizzas.price* orders_details.quantity) as revenue
from orders_details join pizzas
on orders_details.pizza_id=pizzas.pizza_id
join orders1
on orders1.order_id=orders_details.order_id
group by orders1.order_date) as sales;



